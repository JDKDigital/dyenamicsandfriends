buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

//jarJar.enable()

version = "${mod_version}"
group = 'cy.jdkdigital.dyenamicsandfriends' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'dyenamicsandfriends'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dyenamicsandfriends'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                dyenamicsandfriends {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dyenamicsandfriends'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                dyenamicsandfriends {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dyenamicsandfriends'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                dyenamicsandfriends {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'dyenamicsandfriends', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                dyenamicsandfriends {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven { // TOP
        name 'tterrag maven'
        url 'https://maven.tterrag.com/'
    }
    maven { // JEI
        url 'https://dvs1.progwml6.com/files/maven'
    }
    flatDir {
        dir 'libs'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.2.281:api")
    implementation fg.deobf("curse.maven:jei-238222:4061573")
    implementation fg.deobf("curse.maven:the-one-probe-245211:3965688")

    implementation fg.deobf("libs:dyenamics-1.18.2:2.0.0")

//    jarJar(group: 'cofh.dyenamics', name: 'dyenamics', version: '[1.0.0,)') {
//        transitive(false)
//    }

    implementation fg.deobf("curse.maven:flywheel-486392:3934664")
    implementation fg.deobf("curse.maven:autoreglib-250363:3642382")
    implementation fg.deobf("curse.maven:selene-499980:3842421")
    implementation fg.deobf("curse.maven:balm-531761:3914491")
    implementation fg.deobf("curse.maven:bookshelf-228525:4351251") // botany pots
    implementation fg.deobf("curse.maven:blueprint-382216:3991478") // clayworks
    implementation fg.deobf("curse.maven:mantle-74924:4353120") // ceramics
//    implementation fg.deobf("curse.maven:feature-nbt-deadlock-be-gone-560323:3669114") // bumble

    implementation fg.deobf("curse.maven:create-328085:4007544")
    implementation fg.deobf("curse.maven:create-deco-509285:4009050")
    implementation fg.deobf("curse.maven:another-furniture-610492:4034013")
    implementation fg.deobf("curse.maven:chalk-533748:3946794")
    implementation fg.deobf("curse.maven:comforts-276951:4019552")
    implementation fg.deobf("curse.maven:openblocks-elevator-250832:3670034")
    implementation fg.deobf("curse.maven:farmers-delight-398521:3999153")
    implementation fg.deobf("curse.maven:reliquary-v1-3-241319:4001490")
    implementation fg.deobf("curse.maven:snowy-spirit-566142:3831996")
    implementation fg.deobf("curse.maven:supplementaries-412082:4065749")
    implementation fg.deobf("curse.maven:waystones-245755:3830849")
    implementation fg.deobf("curse.maven:quark-243121:3840125")
    implementation fg.deobf("curse.maven:furnish-547069:3893519")
    implementation fg.deobf("curse.maven:skinned-lanterns-414154:3752414")
    implementation fg.deobf("curse.maven:nightlights-651876:4063045")
    implementation fg.deobf("curse.maven:mrcrayfish-furniture-mod-55438:3683524")
    implementation fg.deobf("curse.maven:botany-pots-353928:4333907")
    implementation fg.deobf("curse.maven:oreganized-769203:4278662")
//    implementation fg.deobf("curse.maven:the-bumblezone-forge-362479:3810570")
    implementation fg.deobf("curse.maven:glazed-resymmetry-714619:4403237")
    implementation fg.deobf("curse.maven:ceramics-250617:4049193")
    implementation fg.deobf("curse.maven:clayworks-592162:4380997")
}

//tasks.jarJar.configure {
//    classifier ''
//}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "Dyenamics and Friends",
                "Specification-Vendor"    : "JDK Digital",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "JDK Digital",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

//reobf { jarJar { } }

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}